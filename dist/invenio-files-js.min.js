/*
 * This file is part of Invenio.
 * Copyright (C) 2016 CERN.
 *
 * Invenio is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation; either version 2 of the
 * License, or (at your option) any later version.
 *
 * Invenio is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Invenio; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.
 *
 * In applying this license, CERN does not
 * waive the privileges and immunities granted to it by virtue of its status
 * as an Intergovernmental Organization or submit itself to any jurisdiction.
 */
function InvenioFilesCtrl(e,i,n,o,t,r){function l(){var i=n.defer();return void 0===A.invenioFilesEndpoints.bucket?t.request({method:"POST",url:A.invenioFilesEndpoints.initialization,data:{},headers:void 0!==A.invenioFilesArgs.headers?A.invenioFilesArgs.headers:{}}).then(function(n){A.invenioFilesArgs.url=n.data.links.bucket,e.$broadcast("invenio.records.endpoints.updated",n.data.links),i.resolve({})},function(e){i.reject(e)}):(A.invenioFilesArgs.url=A.invenioFilesEndpoints.bucket,i.resolve({})),i.promise}function s(){l().then(function(){b.setArgs(A.invenioFilesArgs);var i=b.getStates();b.setState(i.STARTED),b.next(),e.$emit("invenio.uploader.upload.started")},function(e){i.$broadcast("invenio.uploader.error",e)})}function a(i,n,o,t,r){A.invenioFilesArgs=angular.merge({},A.invenioFilesArgs,n),A.invenioFilesEndpoints=angular.merge({},A.invenioFilesEndpoints,o),Object.keys(r).length>0&&e.$broadcast("invenio.records.endpoints.updated",r),A.files=t}function u(e,i){A.invenioFilesEndpoints=angular.merge({},A.invenioFilesEndpoints,i)}function d(){return _.reject(A.files,function(e){return void 0===e.completed})}function p(e){if(void 0!==e.completed){var n=angular.copy(A.invenioFilesArgs);n.method="DELETE",n.url=e.multipart===!0?e.completed&&e.links.object_version?e.links.object_version:e.links.self:e.links.version?e.links.version:e.links.self,t.request(n).then(function(){A.files.splice(_.indexOf(A.files,e),1),b.removeFromQueueIndex(e),i.$broadcast("invenio.uploader.file.deleted",e)},function(e){i.$broadcast("invenio.uploader.error",e)})}else A.files.splice(_.indexOf(A.files,e),1),b.removeFromQueueIndex(e),i.$broadcast("invenio.uploader.file.deleted",e)}function c(e){return{key:e.name,uri:!1,multipart:void 0===A.invenioFilesArgs.resumeChunkSize||e.size<A.invenioFilesArgs.resumeChunkSize?!1:!0}}function v(e){angular.forEach(e,function(e){void 0===_.findWhere(A.files,{key:e.key})&&(angular.forEach(c(e),function(i,n){e[n]=i}),A.files.push(e),b.pushToQueue(e))})}function f(){b.cancelUploads()}function h(e){var i=-1;return angular.forEach(A.files,function(n,o){return n.key===e?(i=o,void 0):void 0}),i}function g(e,i){var n=i.data,o=h(n.key);o>-1&&(A.files[o].completed=!0,delete A.files[o].processing,A.files[o]=angular.merge({},A.files[o],n))}function m(e,n){var o=h(void 0!==n.config.data.file?n.config.data.file.key:n.config.data.key);o>-1&&(A.files[o].errored=!0,delete A.files[o].processing,i.$broadcast("invenio.uploader.error",n))}function F(e,i){var n=h(void 0!==i.file?i.file.key:i.key);n>-1&&(A.files[n].progress=i.progress)}function y(e,i){var n=h(i.file.key);n>-1&&(delete A.files[n].progress,A.files[n].processing=!0)}function $(e,i){A.invenioFilesError={},A.invenioFilesError=i}function k(){A.invenioFilesError={},A.invenioFilesBusy=!0}function U(){o(function(){A.invenioFilesBusy=!1},10)}function E(){angular.forEach(A.files,function(e,n){if(void 0!==e.progress&&e.progress<100){if(e.multipart){var o=angular.copy(A.invenioFilesArgs);o.method="DELETE",o.url=e.links.self,t.request(o).then(function(){i.$broadcast("invenio.uploader.file.deleted",e)},function(e){i.$broadcast("invenio.uploader.error",e)})}delete A.files[n].progress,delete A.files[n].processing,delete A.files[n].errored}void 0===e.completed&&b.pushToQueue(A.files[n])})}function S(){U(),E()}var A=this;A.invenioFilesEndpoints={},A.invenioFilesArgs={data:{file:[]},headers:{"Content-Type":"application/json"}};var b=new r;A.addFiles=v,A.cancel=f,A.files=[],A.getCompleted=d,A.invenioFilesBusy=!1,A.invenioFilesError={},A.remove=p,A.upload=s,i.$on("invenio.uploader.init",a),i.$on("invenio.uploader.error",$),e.$on("invenio.uploader.upload.file.uploaded",g),e.$on("invenio.uploader.upload.file.errored",m),e.$on("invenio.uploader.upload.file.progress",F),e.$on("invenio.uploader.upload.file.processing",y),e.$on("invenio.uploader.upload.started",k),e.$on("invenio.uploader.upload.completed",U),e.$on("invenio.uploader.upload.canceled",S),e.$on("invenio.records.endpoints.updated",u)}function invenioFilesError(){function e(e,i,n){e.errorMessage=n.errorMessage||"Error"}function i(e,i){return i.template}return{restricted:"AE",require:"^invenioFilesUploader",scope:!1,templateUrl:i,link:e}}function invenioFilesList(){function e(e,i){return i.template}return{restricted:"AE",require:"^invenioFilesUploader",scope:!1,templateUrl:e}}function invenioFilesUploadZone(){function e(e,i){return i.template}return{restricted:"AE",require:"^invenioFilesUploader",scope:!1,templateUrl:e}}function invenioFilesUploader(){function e(e,i,n){var o={initialization:n.initialization||void 0},t=JSON.parse(n.extraParams||"{}"),r=JSON.parse(n.files||"[]"),l=JSON.parse(n.links||"[]");e.$broadcast("invenio.uploader.init",t,o,r,l)}return{restricted:"AE",scope:!1,controller:"InvenioFilesCtrl",controllerAs:"filesVM",link:e}}function InvenioFilesUploaderModel(e,i,n){function o(e){this.args=angular.copy(e||{}),this.queue=[],this.uploads=[],this.pending=[],this.state={STARTED:1,STOPPED:2},this.currentState=this.state.STOPPED}return o.prototype.setArgs=function(e){this.args=angular.copy(e||{})},o.prototype.pushToQueue=function(e){this.queue.push(e)},o.prototype.removeFromQueue=function(){return this.queue.shift()},o.prototype.removeFromQueueIndex=function(i){this.queue.splice(_.indexOf(this.queue,i),1),e.$emit("invenio.uploader.upload.file.removed")},o.prototype.addUpload=function(e){this.uploads.push(e)},o.prototype.removeUpload=function(e){this.uploads.splice(_.indexOf(this.uploads,e),1)},o.prototype.getUploads=function(){return this.uploads},o.prototype.cancelUploads=function(){this.setState(this.state.STOPPED);var i=angular.copy(this.uploads);this.flush(),_.each(i,function(n,o){n&&n.abort(),i.length===o+1&&_.delay(function(){e.$emit("invenio.uploader.upload.canceled")})})},o.prototype.setState=function(i){this.currentState=i,e.$emit("invenio.uploader.state.changed",i)},o.prototype.getState=function(){return this.currentState},o.prototype.getStates=function(){return this.state},o.prototype.pushToPending=function(e){this.pending.push(e)},o.prototype.removeFromPending=function(){return this.pending.shift()},o.prototype.next=function(){if(this.getState()===this.state.STARTED){var i;this.pending.length&&(i=this.removeFromPending()),i||(i=this.removeFromQueue()),i?(this.upload(i),e.$emit("invenio.uploader.next.requested",i)):this.uploads.length||(this.flush(),e.$emit("invenio.uploader.upload.completed"),this.setState(this.state.STOPPED))}},o.prototype.checkUploadStatus=function(e){var n=i.defer();return void 0!==e.xhr?n.resolve(e):e.then(function(e){n.resolve(e)}),n.promise},o.prototype.upload=function(i){var o=this;o.getUploads().length<(o.args.max_request_slots||3)?o._upload(i).then(function(t){var r=n.upload(t.uploadArgs,t.multipartUpload);e.$emit("invenio.uploader.upload.file.init",i),o.addUpload(r),r.then(function(n){var o=void 0===n.data.links?t.uploadArgs.url:n;t.successCallback.call(this,o,i).then(function(i){e.$emit("invenio.uploader.upload.file.uploaded",i)},function(i){e.$emit("invenio.uploader.upload.file.errored",i)})},function(i){e.$emit("invenio.uploader.upload.file.errored",i)},function(i){var n=parseInt(100*i.loaded/i.total,10),o={file:i.config.data.file||i.config.data,progress:n>100?100:n};e.$emit("invenio.uploader.upload.file.progress",o)}).finally(function(){o.removeUpload(this),_.delay(function(){o.next()}),e.$emit("invenio.uploader.upload.next.call")})}):(o.pushToPending(i),e.$emit("invenio.uploader.upload.file.pending",i))},o.prototype._upload=function(n){var o=i.defer(),t=this;if(void 0===this.args.resumeChunkSize||n.size<this.args.resumeChunkSize){e.$emit("invenio.uploader.upload.file.normal.requested",n);var r=t._prepareRequest(n,"PUT");r.data=n,o.resolve({uploadArgs:r,multipartUpload:!1,successCallback:t.postNormalUploadProcess})}else{e.$emit("invenio.uploader.upload.file.chunked.requested",n);var l=t._prepareRequest(n,"POST");l.data.file=n,t._requestUploadID(l).then(function(e){var i=t._prepareRequest(n,"PUT");i.data.file=n,i.url=e.data.links.self,o.resolve({uploadArgs:i,multipartUpload:!0,successCallback:t.postChunkUploadProcess})})}return o.promise},o.prototype.postChunkUploadProcess=function(o,t){var r=i.defer();return e.$emit("invenio.uploader.upload.file.processing",{file:t}),n.request({method:"POST",url:o}).then(function(e){r.resolve(e)},function(e){r.reject(e)}),r.promise},o.prototype.postNormalUploadProcess=function(e){var n=i.defer();return n.resolve(e),n.promise},o.prototype._requestUploadID=function(e){return e.params={uploads:1,size:e.data.file.size,partSize:e.resumeChunkSize},n.request(e)},o.prototype._prepareRequest=function(e,i){var n=angular.copy(this.args);return n.url=n.url+"/"+e.key,n.method=i||"POST",n.headers["Content-Type"]=(e.type||"").indexOf("/")>-1?e.type:"",n},o.prototype.flush=function(){this.pending=[],this.uploads=[],this.queue=[]},o}function bytesToHumanReadable(){function e(e){function i(e,i){return Math.round(e*Math.pow(10,i))/Math.pow(10,i)}var n=Math.pow(1024,4);return e>n?i(e/n,1)+" Tb":e>(n/=1024)?i(e/n,1)+" Gb":e>(n/=1024)?i(e/n,1)+" Mb":e>1024?Math.round(e/1024)+" Kb":e+" B"}return e}function InvenioFilesAPI(e,i){function n(e,n){return n?i.upload(e):i.http(e)}function o(i){return e(i)}return{request:o,upload:n}}angular.module("invenioFiles.controllers",[]),angular.module("invenioFiles.directives",[]),angular.module("invenioFiles.factories",[]),angular.module("invenioFiles.filters",[]),angular.module("invenioFiles.services",[]),angular.module("invenioFiles",["ngFileUpload","invenioFiles.services","invenioFiles.factories","invenioFiles.filters","invenioFiles.controllers","invenioFiles.directives"]),InvenioFilesCtrl.$inject=["$rootScope","$scope","$q","$timeout","InvenioFilesAPI","InvenioFilesUploaderModel"],angular.module("invenioFiles.controllers").controller("InvenioFilesCtrl",InvenioFilesCtrl),angular.module("invenioFiles.directives").directive("invenioFilesError",invenioFilesError),angular.module("invenioFiles.directives").directive("invenioFilesList",invenioFilesList),angular.module("invenioFiles.directives").directive("invenioFilesUploadZone",invenioFilesUploadZone),angular.module("invenioFiles.directives").directive("invenioFilesUploader",invenioFilesUploader),InvenioFilesUploaderModel.$inject=["$rootScope","$q","InvenioFilesAPI"],angular.module("invenioFiles.factories").factory("InvenioFilesUploaderModel",InvenioFilesUploaderModel),angular.module("invenioFiles.filters").filter("bytesToHumanReadable",bytesToHumanReadable),InvenioFilesAPI.$inject=["$http","Upload"],angular.module("invenioFiles.services").service("InvenioFilesAPI",InvenioFilesAPI);